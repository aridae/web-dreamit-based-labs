swagger: "2.0"
info:
  description: "Это у нас интерактивная спецификация, сгенерированная сваггером"
  version: "1.0.0"
  title: "Awesome dreamit swagger"
  termsOfService: "http://swagger.io/terms/"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "localhost"
basePath: "/api/v1"
tags:
- name: "room"
  description: "Information about rooms booking"
- name: "user"
  description: "Information about users"
- name: "session"
  description: "Вопрос: нужно ли нам это, это же не внешнее апи вроде - операции обновления/проверки сессии"
schemes:
- "http"
# ВОТ ТУТ МЫ ОПИСЫВАЕМ ВСЕ НАШИ ЗАМЕЧАТЕЛЬНЫЕ ПУТИ
paths:
  /room:
    get: 
      tags:
        - "room"
      # описание это ху такой вообще 
      summary: "Get all rooms"
      # в каком формате мы можем получить ответ 
      produces:
      - "application/json"
      # какие ответы возможны 
      responses:
          "200":
            description: "Success"
          "409":
            description: "Conflict with current  server state"
  
  /room/my:
    get: 
      tags:
        - "room"
      summary: "Get booking info for the authorized user"
      produces:
      - "application/json"
      responses:
          "200":
            description: "Success"
          "401":
            description: "User unauthorized"
          "404":
            description: "User not found: invalid user id"
          "409":
            description: "Conflict with current  server state: warehouse error"
  /room/{id}:
    get: 
      tags:
        - "room"
      parameters:
          - in: path
            name: id
            type: integer
            required: true
            description: Numeric ID of the room to get
      summary: "Get booking info about room"
      produces:
      - "application/json"
      responses:
          "200":
            description: "Success"
          "401":
            description: "User unauthorized"
          "404":
            description: "User not found: invalid user id"
          "409":
            description: "Conflict with current  server state: warehouse error"
    post: 
      tags:
        - "room"
      parameters:
          - in: path
            name: id
            type: integer
            required: true
            description: Numeric ID of the room to get
      summary: "Post booking info for the authorized user"
      produces:
      - "application/json"
      consumes:
      - "application/json"
      responses:
          "200":
            description: "Success"
          "401":
            description: "User unauthorized"
          "404":
            description: "User not found: invalid user id"
          "409":
            description: "Conflict with current  server state: warehouse error"
  /room/{id}/{date}:
      get:
        tags:
        - "room"
        parameters:
            - in: path
              name: id
              type: integer
              required: true
              description: Numeric ID of the room to get
            - in: path
              name: date
              type: string
              required: true
              description: Date to get info about booking for
        summary: "Get booking info about room"
        produces:
        - "application/json"
        responses:
            "200":
              description: "Success"
            "401":
              description: "User unauthorized"
            "404":
              description: "User not found: invalid user id"
            "409":
              description: "Conflict with current  server state: warehouse error"
      post: 
        tags:
        - "room"
        parameters:
            - in: path
              name: id
              type: integer
              required: true
              description: Numeric ID of the room to get
            - in: path
              name: date
              type: string
              required: true
              description: Date to get info about booking for
        summary: "Post booking info for the authorized user"
        produces:
        - "application/json"
        consumes:
        - "application/json"
        responses:
            "200":
              description: "Success"
            "401":
              description: "User unauthorized"
            "404":
              description: "User not found: invalid user id"
            "409":
              description: "Conflict with current  server state: warehouse error"
  /user/login:
    get:
      tags:
      - "user"
      summary: "Logs user into the system"
      description: ""
      operationId: "loginUser"
      produces:
      - "application/json"
      parameters:
      - name: "username"
        in: "query"
        description: "The user name for login"
        required: true
        type: "string"
      - name: "password"
        in: "query"
        description: "The password for login in clear text"
        required: true
        type: "string"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "string"
          headers:
            X-Rate-Limit:
              type: "integer"
              format: "int32"
              description: "calls per hour allowed by the user"
            X-Expires-After:
              type: "string"
              format: "date-time"
              description: "date in UTC when token expires"
        "400":
          description: "Invalid username/password supplied"
  /user/logout:
    get:
      tags:
      - "user"
      summary: "Logs out current logged in user session"
      description: ""
      operationId: "logoutUser"
      produces:
      - "application/json"
      parameters: []
      responses:
        default:
          description: "successful operation"
definitions:
  Room:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      title:
        type: "string"
        format: "date-time"
  Calendar:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      roomId:
        type: "integer"
        format: "int64"
      author:
        type: "integer"
        format: "int64"
      title:
        type: "string"
        format: "text"
      start:
        type: "string"
        format: "timestamp"
      end:
        type: "string"
        format: "timestamp"
  User:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      login:
        type: "string"
      firstName:
        type: "string"
      lastName:
        type: "string"
      email:
        type: "string"
      password:
        type: "string"
      avatar:
        type: "string"
      background:
        type: "string"
  ApiResponse:
    type: "object"
    properties:
      code:
        type: "integer"
        format: "int32"
      type:
        type: "string"
      message:
        type: "string"
externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"